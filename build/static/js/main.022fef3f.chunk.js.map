{"version":3,"sources":["__mock__/fakeAPIPromise.js","scenes/Chart/Chart.js","__mock__/mockData.js","commons/utils.js","components/LocationSearchBar.js","scenes/_Upper/components/Status/components/Params/Params.js","scenes/_Upper/components/Status/Status.js","scenes/_Upper/components/Header/Header.js","scenes/_Upper/Upper.js","App.js","reportWebVitals.js","index.js"],"names":["fakeAPIPromise","tide","hour","sun","Chart","useEffect","Svg","d3","append","attr","height","g","x","domain","map","d","y","xAxis","style","yAxis","lineTidePath","curve","lineSunPath","currentWidth","parseInt","currentHeight","range","call","ticks","area","y0","y1","data","drawChart","className","defaultLocation","locationUrl","LocationSearchBar","onSearch","useState","selectedLocationName","setSelectedLocationName","loading","error","foundLocations","state","setState","e","a","locationString","target","value","axios","get","response","Fragment","items","getItemValue","item","title","renderInput","props","FormControl","name","type","placeholder","renderItem","highlighted","backgroundColor","woeid","onChange","onSelect","find","location","console","log","Params","Math","round","dataFromStatus","visibility","wind_speed","Status","locationId","consolidatedWeatherFirst","setConsolidatedWeatherFirst","weather","setWeather","setLoading","setError","consolidated_weather","fetchData","weather_state_name","the_temp","humidity","Header","setLocationId","foundLocationId","Upper","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wTAAaA,EAAiB,CAC1B,CACIC,KAAM,GACNC,KAAM,eACNC,IAAK,GAET,CACIF,KAAM,EACNC,KAAM,cACNC,IAAK,GAET,CACIF,KAAM,GACNC,KAAM,eACNC,IAAK,GAET,CACIF,KAAM,EACNC,KAAM,cACNC,IAAK,GAET,CACIF,KAAM,GACNC,KAAM,eACNC,IAAK,GAET,CACIF,KAAM,EACNC,KAAM,cACNC,IAAK,GAET,CACIF,KAAM,GACNC,KAAM,eACNC,IAAK,GAET,CACIF,KAAM,EACNC,KAAM,cACNC,IAAK,GAET,CACIF,KAAM,GACNC,KAAM,eACNC,IAAK,GAET,CACIF,KAAM,EACNC,KAAM,cACNC,IAAK,GAET,CACIF,KAAM,GACNC,KAAM,eACNC,IAAK,GAET,CACIF,KAAM,EACNC,KAAM,cACNC,IAAK,GAET,CACIF,KAAM,GACNC,KAAM,eACNC,IAAK,I,OCsCEC,EAhGM,WA0FjB,OAzFAC,qBAAU,WACN,IACIC,EAAMC,IAAU,aACfC,OAAO,OACPC,KAAK,SAHNC,WAIAC,EAAIL,EAAIE,OAAO,KACdC,KAAK,QAAS,oBACfG,EAAIL,MACHM,OAAQb,EAAec,KAAI,SAAUC,GAAK,OAAOA,EAAEb,SACpDc,EAAIT,MACHM,OAAO,CAAC,EAAG,IACZI,EAAQN,EAAEH,OAAO,KAChBC,KAAK,YAAa,kBAClBS,MAAM,QAAS,QAChBC,EAAQR,EAAEH,OAAO,KAGjBY,EAAeb,MACdK,GAAE,SAAUG,GAAK,OAAOH,EAAEG,EAAEb,SAC5Bc,GAAE,SAAUD,GAAK,OAAOC,EAAED,EAAEd,SAC5BoB,MAAMd,KACPe,EAAcf,MACTK,GAAE,SAAUG,GAAK,OAAOH,EAAEG,EAAEb,SAC5Bc,GAAE,SAAUD,GAAK,OAAOC,EAAED,EAAEZ,QAC5BkB,MAAMd,MAoCG,WACd,IAAMgB,EAAeC,SAASjB,IAAU,aAAaW,MAAM,SAAU,QAC/DO,EAAgBD,SAASjB,IAAU,aAAaW,MAAM,UAAW,QACvEZ,EAAIG,KAAK,QAASc,GACbd,KAAK,SAAUgB,GACpBb,EAAEc,MAAM,CAAC,EAAGH,EAAe,IAC3BN,EAAMU,KAAKpB,IAAcK,GAAGgB,MAAM,IAClCZ,EAAEU,MAAM,CAACD,EAAe,IACxBN,EAAMQ,KAAKpB,IAAYS,GAAGY,MAAM,KAChC,IAAIC,EAAOtB,MACNK,GAAE,SAAUG,GAAK,OAAOH,EAAEG,EAAEb,SAC5B4B,GAAGL,GACHM,IAAI,SAAUhB,GAAK,OAAOC,EAAED,EAAEd,SAC9BoB,MAAMd,KAEXI,EAAEH,OAAO,QACJwB,KAAKhC,GACLS,KAAK,QAAS,QACdA,KAAK,IAAKoB,EAAK7B,IACfS,KAAK,OAAQ,aAvClBE,EAAEH,OAAO,QACJwB,KAAK,CAAChC,IACNS,KAAK,QAAS,aACdS,MAAM,SAAU,aAChBT,KAAK,IAAKW,GAGfT,EAAEH,OAAO,QACJwB,KAAK,CAAChC,IACNS,KAAK,QAAS,YACdS,MAAM,SAnCI,UAoCVA,MAAM,eAAgB,OACtBA,MAAM,OAAQ,QACdT,KAAK,IAAKa,GA1BfX,EAAEH,OAAO,QACJwB,KAAKhC,GACLS,KAAK,QAAS,aACdA,KAAK,KAAK,SAAUM,GAAK,OAAOH,EAAEG,EAAEb,SACpCO,KAAK,KAAK,SAAUM,GAAK,OAAOC,EAAED,EAAEd,SACpCQ,KAAK,QAAS,IACdA,KAAK,SAAU,IACfS,MAAM,SAAU,QAChBA,MAAM,OAAQ,QACdA,MAAM,eAAgB,OAiD/Be,MAKA,qBAAKC,UAAU,c,QC+SVC,EAGJ,Q,yCChZIC,EAAW,UAHX,sCAGW,YAFX,4C,0CC0EEC,EAnEW,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACzB,EAAwDC,mBAAS,IAAjE,mBAAOC,EAAP,KAA6BC,EAA7B,KACA,EAA0BF,mBAAS,CAC/BG,SAAS,EACTC,MAAO,KACPC,eAAgB,KAHpB,mBAAOC,EAAP,KAAcC,EAAd,KAFwC,4CAQxC,WAAwBC,GAAxB,iBAAAC,EAAA,yDACUC,EAAiBF,EAAEG,OAAOC,MAChCV,EAAwBQ,GACD,KAAnBA,EAHR,0CAKmCG,IAAMC,IAAN,UAAajB,EAAb,0BAA0Ca,IAL7E,OAKkBK,EALlB,OAMYR,EAAS,CACLJ,SAAS,EACTC,MAAO,KACPC,eAAgBU,EAAStB,OATzC,kDAYYc,EAAS,CACLJ,SAAS,EACTC,MAAO,KACPC,eAAgB,KAfhC,2DARwC,sBA0CxC,OACI,eAAC,IAAMW,SAAP,WACI,cAAC,IAAD,CACIC,MAAOX,EAAMD,eACba,aAAc,SAACC,GAAD,OAAUA,EAAKC,OAC7BC,YAAa,SAACC,GACV,OAAO,cAACC,EAAA,EAAD,aAAaC,KAAK,SAASC,KAAK,OAAOC,YAAY,mBAAmB/B,UAAU,WAAc2B,KAEzGK,WAAY,SAACR,EAAMS,GAAP,OACR,qBAAsBjD,MAAO,CAAEkD,gBAAiBD,EAAc,OAAS,eAAvE,SAAyFT,EAAKC,OAApFD,EAAKW,QAEnBlB,MAAOX,EACP8B,SAtD4B,4CAuD5BC,SA1BK,SAACZ,GACdlB,EAAwBkB,GACxB,IAAMnB,EAAuBK,EAAMD,eAAe4B,MAAK,SAACC,GACpD,OAAOA,EAASd,QAAUA,KAE9Bb,EAAS,CACLJ,SAAS,EACTC,OAAO,EACPC,eAAgB,KAEpB8B,QAAQC,IAAInC,EAAqB6B,OACjC/B,EAASE,EAAqB6B,UAiBzBxB,EAAMF,OAAS,sBAAMT,UAAU,cAAhB,SAA+BW,EAAMF,QACpDE,EAAMH,SAAW,sBAAMR,UAAU,YAAhB,SAA4B,cAAC,kBAAD,UCjC3C0C,G,qBA9BO,SAACf,GACnB,OACI,cAAC,IAAMN,SAAP,UAEQ,sBAAKrB,UAAU,wBAAf,UACI,sBAAKA,UAAU,6BAAf,UACQ,qBAAKA,UAAU,QAAf,wBACA,qBAAKA,UAAU,oBAAf,SAAoC2C,KAAKC,MAAMjB,EAAMkB,eAAeC,cACpE,qBAAK9C,UAAU,QAAf,qBAEJ,sBAAKA,UAAU,6BAAf,UACI,qBAAKA,UAAU,QAAf,wBACA,qBAAKA,UAAU,wBAAf,SAAwC2C,KAAKC,MAAMjB,EAAMkB,eAAeE,cACxE,qBAAK/C,UAAU,QAAf,qBAER,sBAAKA,UAAU,6BAAf,UACI,qBAAKA,UAAU,QAAf,oBACA,qBAAKA,UAAU,yBACf,qBAAKA,UAAU,aAEnB,sBAAKA,UAAU,6BAAf,UACI,qBAAKA,UAAU,aACf,qBAAKA,UAAU,WAAf,2BCqCTgD,EAvDA,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACd,EAAgE5C,mBAAS,MAAzE,mBAAO6C,EAAP,KAAiCC,EAAjC,KACA,EAA8B9C,mBAAS,IAAvC,mBAAO+C,EAAP,KAAgBC,EAAhB,KACA,EAA8BhD,oBAAS,GAAvC,mBAAOG,EAAP,KAAgB8C,EAAhB,KACA,EAA0BjD,oBAAS,GAAnC,mBAAOI,EAAP,KAAc8C,EAAd,KAqBA,OAnBApF,qBAAU,YACS,uCAAG,4BAAA2C,EAAA,6DACdwC,GAAW,GACXC,GAAS,GAFK,kBAIarC,IAAMC,IAAN,UAAajB,EAAb,YAA4B+C,IAJzC,OAIJ7B,EAJI,OAKViC,EAAWjC,EAAStB,MACpBqD,EAA4B/B,EAAStB,KAAK0D,qBAAqB,IAC/DF,GAAW,GACXC,GAAS,GARC,kDAUVA,GAAS,GAVC,QAYdD,GAAW,GAZG,0DAAH,qDAcfG,KACF,CAACR,IACHT,QAAQC,IAAIW,GACZZ,QAAQC,IAAIS,GAER,eAAC,IAAM7B,SAAP,WAEqC,OAA7B6B,EAAoC,GAAK,qCACpC1C,GAAW,qBAAKR,UAAU,WAAf,wBACZ,sBAAKA,UAAU,WAAf,uBAAqCoD,EAAQ3B,SAC7C,sBAAKzB,UAAU,wBAAf,UACI,qBAAKA,UAAU,gCAEf,sBAAKA,UAAU,8BAAf,UACI,qBAAKA,UAAU,cAAf,SAA8BkD,EAAyBQ,qBACvD,sBAAK1D,UAAU,cAAf,UACI,uBAAMA,UAAU,qBAAhB,UAAsC2C,KAAKC,MAAMM,EAAyBS,UAA1E,QACA,uBAAM3D,UAAU,kBAAhB,UAAmC2C,KAAKC,MAAMM,EAAyBU,UAAvE,gBAIZ,cAAC,EAAD,CAAQf,eAAgBK,OAG/BzC,GAAS,sBAAKT,UAAU,cAAf,cAA+BS,EAA/B,OACTD,GAAW,qBAAKR,UAAU,WAAf,SAA0B,cAAC,gBAAD,UChBnC6D,EA/BO,WAClB,MAAoCxD,mBAASJ,GAA7C,mBAAOgD,EAAP,KAAmBa,EAAnB,KAOA,OADAtB,QAAQC,IAAIQ,GAER,gCACI,sBAAKjD,UAAU,gBAAf,UACI,sBAAKA,UAAU,aAAf,UACI,yBACA,yBACA,4BAEJ,sBAAKA,UAAU,eAAf,UACI,qBAAKA,UAAU,oBAAf,mBACA,qBAAKA,UAAU,wBAAf,SACI,kCACI,cAAC,EAAD,CAAmBI,SAlB1B,SAAC2D,GACU,KAApBA,GACAD,EAAcC,aAoBV,qBAAK/D,UAAU,wBAEnB,cAAC,EAAD,CAAQiD,WAAYA,QCrBjBe,EARD,WACV,OACI,qBAAKhE,UAAU,0BAAf,SACI,cAAC,EAAD,OCcGiE,G,OAfH,WACV,OACE,sBAAKjE,UAAU,oBAAf,UACE,cAAC,EAAD,IACA,sBAAKA,UAAU,0BAAf,UACE,sBAAKA,UAAU,iCAAf,UACE,sBAAMA,UAAU,aAAhB,kBACA,sBAAMA,UAAU,eAAhB,iCAEF,cAAC,EAAD,YCFOkE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.022fef3f.chunk.js","sourcesContent":["export const fakeAPIPromise = [\r\n    {\r\n        tide: 0.5,\r\n        hour: 'Mon 12:00 pm',\r\n        sun: 0\r\n    },\r\n    {\r\n        tide: 2.0,\r\n        hour: 'Mon 6:00 am',\r\n        sun: 0\r\n    },\r\n    {\r\n        tide: 0.5,\r\n        hour: 'Mon 12:00 am',\r\n        sun: 2\r\n    },\r\n    {\r\n        tide: 2,\r\n        hour: 'Mon 6:00 pm',\r\n        sun: 0\r\n    },\r\n    {\r\n        tide: 0.5,\r\n        hour: 'Tue 12:00 pm',\r\n        sun: 0\r\n    },\r\n    {\r\n        tide: 2,\r\n        hour: 'Tue 6:00 am',\r\n        sun: 0\r\n    },\r\n    {\r\n        tide: 0.5,\r\n        hour: 'Tue 12:00 am',\r\n        sun: 2\r\n    },\r\n    {\r\n        tide: 2,\r\n        hour: 'Tue 6:00 pm',\r\n        sun: 0\r\n    },\r\n    {\r\n        tide: 0.5,\r\n        hour: 'Wed 12:00 pm',\r\n        sun: 0\r\n    },\r\n    {\r\n        tide: 2,\r\n        hour: 'Wed 6:00 am',\r\n        sun: 0\r\n    },\r\n    {\r\n        tide: 0.5,\r\n        hour: 'Wed 12:00 am',\r\n        sun: 2\r\n    },\r\n    {\r\n        tide: 2,\r\n        hour: 'Wed 6:00 pm',\r\n        sun: 0\r\n    },\r\n    {\r\n        tide: 0.5,\r\n        hour: 'Thur 12:00 m',\r\n        sun: 0\r\n    },  \r\n]\r\n","import React, { useEffect } from 'react'\r\nimport './chart.scss'\r\nimport * as d3 from 'd3'\r\nimport { fakeAPIPromise } from '../../__mock__/fakeAPIPromise'\r\n<script src=\"https://d3js.org/d3.v4.min.js\" charset=\"utf-8\"></script>\r\n\r\nexport const Chart = () => {\r\n    useEffect(() => {\r\n        var height\r\n        var Svg = d3.select(\".svgchart\")\r\n            .append(\"svg\")\r\n            .attr(\"height\", height)\r\n        var g = Svg.append(\"g\")\r\n            .attr('class', 'margin-container')\r\n        var x = d3.scalePoint()\r\n            .domain((fakeAPIPromise.map(function (d) { return d.hour; })))\r\n        var y = d3.scaleLinear()\r\n            .domain([0, 3])\r\n        var xAxis = g.append(\"g\")\r\n            .attr(\"transform\", \"translate(0,0)\")\r\n            .style('color', '#000')\r\n        var yAxis = g.append(\"g\")\r\n        var lineSunColor = 'orange'\r\n\r\n        var lineTidePath = d3.area()\r\n            .x(function (d) { return x(d.hour); })\r\n            .y(function (d) { return y(d.tide); })\r\n            .curve(d3.curveBumpX),\r\n            lineSunPath = d3.area()\r\n                .x(function (d) { return x(d.hour); })\r\n                .y(function (d) { return y(d.sun); })\r\n                .curve(d3.curveMonotoneX);\r\n\r\n        const rectangle = () => {\r\n            g.append('path')\r\n                .data(fakeAPIPromise)\r\n                .attr(\"class\", 'rect-line')\r\n                .attr(\"x\", function (d) { return x(d.hour); })\r\n                .attr(\"y\", function (d) { return y(d.tide); })\r\n                .attr(\"width\", 50)\r\n                .attr(\"height\", 30)\r\n                .style(\"stroke\", 'pink')\r\n                .style(\"fill\", 'pink')\r\n                .style(\"stroke-width\", '1px')\r\n        }\r\n\r\n        const lineTideMain = () => {\r\n            g.append('path')\r\n                .data([fakeAPIPromise])\r\n                .attr('class', 'line-tide')\r\n                .style(\"stroke\", '#0affe840')\r\n                .attr('d', lineTidePath);\r\n        }\r\n        const lineSunMain = () => {\r\n            g.append('path')\r\n                .data([fakeAPIPromise])\r\n                .attr('class', 'line-sun')\r\n                .style(\"stroke\", lineSunColor)\r\n                .style(\"stroke-width\", '2px')\r\n                .style(\"fill\", 'none')\r\n                .attr('d', lineSunPath);\r\n        }\r\n\r\n\r\n\r\n\r\n\r\n        const drawChart = () => {\r\n            const currentWidth = parseInt(d3.select('.svgchart').style('width'), \"100%\")\r\n            const currentHeight = parseInt(d3.select('.svgchart').style('height'), \"100%\")\r\n            Svg.attr(\"width\", currentWidth)\r\n                .attr('height', currentHeight)\r\n            x.range([0, currentWidth - 5]);\r\n            xAxis.call(d3.axisBottom(x).ticks(2))\r\n            y.range([currentHeight, 0]);\r\n            yAxis.call(d3.axisLeft(y).ticks(10))\r\n            var area = d3.area()\r\n                .x(function (d) { return x(d.hour); })\r\n                .y0(currentHeight)\r\n                .y1((function (d) { return y(d.tide); }))\r\n                .curve(d3.curveBumpX);\r\n\r\n            g.append('path')\r\n                .data(fakeAPIPromise)\r\n                .attr('class', 'area')\r\n                .attr('d', area(fakeAPIPromise))\r\n                .attr('fill', '#0affe840')\r\n\r\n            lineTideMain()\r\n            lineSunMain()\r\n            rectangle()\r\n        }\r\n        drawChart()\r\n        // window.addEventListener('resize', drawChart)\r\n    })\r\n\r\n    return (\r\n        <div className='svgchart'>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Chart\r\n","export const weatherHCM = {\r\n  consolidated_weather: [\r\n    {\r\n      id: 4606180070522880,\r\n      weather_state_name: 'Heavy Rain',\r\n      weather_state_abbr: 'hr',\r\n      wind_direction_compass: 'SE',\r\n      created: '2020-05-17T09:56:46.013280Z',\r\n      applicable_date: '2020-05-17',\r\n      min_temp: 28.31,\r\n      max_temp: 33.59,\r\n      the_temp: 32.3,\r\n      wind_speed: 4.589392984935974,\r\n      wind_direction: 144.91605586893155,\r\n      air_pressure: 1004.5,\r\n      humidity: 68,\r\n      visibility: 12.263381849996023,\r\n      predictability: 77\r\n    },\r\n    {\r\n      id: 6351493500239872,\r\n      weather_state_name: 'Light Rain',\r\n      weather_state_abbr: 'lr',\r\n      wind_direction_compass: 'SW',\r\n      created: '2020-05-17T09:56:48.950988Z',\r\n      applicable_date: '2020-05-18',\r\n      min_temp: 27.305,\r\n      max_temp: 36.19,\r\n      the_temp: 33.730000000000004,\r\n      wind_speed: 4.251340699692463,\r\n      wind_direction: 214.93111922995251,\r\n      air_pressure: 1007,\r\n      humidity: 62,\r\n      visibility: 12.407850652191204,\r\n      predictability: 75\r\n    },\r\n    {\r\n      id: 4549312488931328,\r\n      weather_state_name: 'Light Rain',\r\n      weather_state_abbr: 'lr',\r\n      wind_direction_compass: 'SW',\r\n      created: '2020-05-17T09:56:52.635001Z',\r\n      applicable_date: '2020-05-19',\r\n      min_temp: 27.4,\r\n      max_temp: 37.105000000000004,\r\n      the_temp: 33.63,\r\n      wind_speed: 5.072462348521966,\r\n      wind_direction: 223.96820594920615,\r\n      air_pressure: 1006.5,\r\n      humidity: 64,\r\n      visibility: 13.008095223892468,\r\n      predictability: 75\r\n    },\r\n    {\r\n      id: 5115785590603776,\r\n      weather_state_name: 'Showers',\r\n      weather_state_abbr: 's',\r\n      wind_direction_compass: 'SW',\r\n      created: '2020-05-17T09:56:55.012860Z',\r\n      applicable_date: '2020-05-20',\r\n      min_temp: 27.744999999999997,\r\n      max_temp: 37.055,\r\n      the_temp: 33.8,\r\n      wind_speed: 5.590087972767042,\r\n      wind_direction: 222.80254311770628,\r\n      air_pressure: 1007,\r\n      humidity: 63,\r\n      visibility: 11.423598683687267,\r\n      predictability: 73\r\n    },\r\n    {\r\n      id: 5675212395773952,\r\n      weather_state_name: 'Heavy Rain',\r\n      weather_state_abbr: 'hr',\r\n      wind_direction_compass: 'SSW',\r\n      created: '2020-05-17T09:56:58.315722Z',\r\n      applicable_date: '2020-05-21',\r\n      min_temp: 28.005000000000003,\r\n      max_temp: 36.34,\r\n      the_temp: 33.79,\r\n      wind_speed: 6.027861465065352,\r\n      wind_direction: 208.61071580536523,\r\n      air_pressure: 1007.5,\r\n      humidity: 65,\r\n      visibility: 11.262663544897798,\r\n      predictability: 77\r\n    },\r\n    {\r\n      id: 5637597072195584,\r\n      weather_state_name: 'Heavy Rain',\r\n      weather_state_abbr: 'hr',\r\n      wind_direction_compass: 'SSW',\r\n      created: '2020-05-17T09:57:00.873640Z',\r\n      applicable_date: '2020-05-22',\r\n      min_temp: 27.475,\r\n      max_temp: 35.775000000000006,\r\n      the_temp: 34.04,\r\n      wind_speed: 4.3180326890956815,\r\n      wind_direction: 212,\r\n      air_pressure: 1008,\r\n      humidity: 66,\r\n      visibility: 9.999726596675416,\r\n      predictability: 77\r\n    }\r\n  ],\r\n  time: '2020-05-17T18:45:12.819482+07:00',\r\n  sun_rise: '2020-05-17T05:30:39.691163+07:00',\r\n  sun_set: '2020-05-17T18:08:47.763268+07:00',\r\n  timezone_name: 'LMT',\r\n  parent: {\r\n    title: 'Vietnam',\r\n    location_type: 'Country',\r\n    woeid: 23424984,\r\n    latt_long: '15.974210,107.868042'\r\n  },\r\n  sources: [\r\n    {\r\n      title: 'BBC',\r\n      slug: 'bbc',\r\n      url: 'http://www.bbc.co.uk/weather/',\r\n      crawl_rate: 360\r\n    },\r\n    {\r\n      title: 'Forecast.io',\r\n      slug: 'forecast-io',\r\n      url: 'http://forecast.io/',\r\n      crawl_rate: 480\r\n    },\r\n    {\r\n      title: 'Met Office',\r\n      slug: 'met-office',\r\n      url: 'http://www.metoffice.gov.uk/',\r\n      crawl_rate: 180\r\n    },\r\n    {\r\n      title: 'OpenWeatherMap',\r\n      slug: 'openweathermap',\r\n      url: 'http://openweathermap.org/',\r\n      crawl_rate: 360\r\n    },\r\n    {\r\n      title: 'World Weather Online',\r\n      slug: 'world-weather-online',\r\n      url: 'http://www.worldweatheronline.com/',\r\n      crawl_rate: 360\r\n    }\r\n  ],\r\n  title: 'Ho Chi Minh City',\r\n  location_type: 'City',\r\n  woeid: 1252431,\r\n  latt_long: '10.759180,106.662498',\r\n  timezone: 'Asia/Ho_Chi_Minh'\r\n}\r\n\r\nexport const weatherHongKong = {\r\n  consolidated_weather: [\r\n    {\r\n      id: 5067263918997504,\r\n      weather_state_name: 'Heavy Cloud',\r\n      weather_state_abbr: 'hc',\r\n      wind_direction_compass: 'SSW',\r\n      created: '2020-05-17T09:27:58.049518Z',\r\n      applicable_date: '2020-05-17',\r\n      min_temp: 25.299999999999997,\r\n      max_temp: 28.975,\r\n      the_temp: 29.87,\r\n      wind_speed: 5.438201131024154,\r\n      wind_direction: 212.0093705300867,\r\n      air_pressure: 1004.5,\r\n      humidity: 72,\r\n      visibility: 12.244740714228904,\r\n      predictability: 71\r\n    },\r\n    {\r\n      id: 5527084996755456,\r\n      weather_state_name: 'Heavy Rain',\r\n      weather_state_abbr: 'hr',\r\n      wind_direction_compass: 'SW',\r\n      created: '2020-05-17T09:28:01.054955Z',\r\n      applicable_date: '2020-05-18',\r\n      min_temp: 22.59,\r\n      max_temp: 25.955,\r\n      the_temp: 25.99,\r\n      wind_speed: 7.916140937585833,\r\n      wind_direction: 228.28960090829563,\r\n      air_pressure: 1004.5,\r\n      humidity: 93,\r\n      visibility: 7.088913246639624,\r\n      predictability: 77\r\n    },\r\n    {\r\n      id: 6711731147505664,\r\n      weather_state_name: 'Light Rain',\r\n      weather_state_abbr: 'lr',\r\n      wind_direction_compass: 'ESE',\r\n      created: '2020-05-17T09:28:04.435601Z',\r\n      applicable_date: '2020-05-19',\r\n      min_temp: 23.68,\r\n      max_temp: 27.645000000000003,\r\n      the_temp: 28.875,\r\n      wind_speed: 4.374449651448873,\r\n      wind_direction: 105.26536833731473,\r\n      air_pressure: 1004.5,\r\n      humidity: 82,\r\n      visibility: 10.173399844905749,\r\n      predictability: 75\r\n    },\r\n    {\r\n      id: 6081518432681984,\r\n      weather_state_name: 'Heavy Rain',\r\n      weather_state_abbr: 'hr',\r\n      wind_direction_compass: 'SSE',\r\n      created: '2020-05-17T09:28:06.944796Z',\r\n      applicable_date: '2020-05-20',\r\n      min_temp: 25.18,\r\n      max_temp: 28.29,\r\n      the_temp: 29.18,\r\n      wind_speed: 6.398852777080517,\r\n      wind_direction: 153.0700260492125,\r\n      air_pressure: 1006,\r\n      humidity: 84,\r\n      visibility: 8.360549391553329,\r\n      predictability: 77\r\n    },\r\n    {\r\n      id: 4553280300515328,\r\n      weather_state_name: 'Heavy Rain',\r\n      weather_state_abbr: 'hr',\r\n      wind_direction_compass: 'S',\r\n      created: '2020-05-17T09:28:10.017240Z',\r\n      applicable_date: '2020-05-21',\r\n      min_temp: 26.09,\r\n      max_temp: 28.845,\r\n      the_temp: 28.42,\r\n      wind_speed: 9.576765600063629,\r\n      wind_direction: 187.88950995760106,\r\n      air_pressure: 1005,\r\n      humidity: 89,\r\n      visibility: 6.886967609162491,\r\n      predictability: 77\r\n    },\r\n    {\r\n      id: 4932033602125824,\r\n      weather_state_name: 'Heavy Rain',\r\n      weather_state_abbr: 'hr',\r\n      wind_direction_compass: 'SW',\r\n      created: '2020-05-17T09:28:13.051394Z',\r\n      applicable_date: '2020-05-22',\r\n      min_temp: 24.83,\r\n      max_temp: 28.08,\r\n      the_temp: 27.23,\r\n      wind_speed: 9.001170365068003,\r\n      wind_direction: 226,\r\n      air_pressure: 1005,\r\n      humidity: 93,\r\n      visibility: 5.678711325856995,\r\n      predictability: 77\r\n    }\r\n  ],\r\n  time: '2020-05-17T19:43:37.345574+08:00',\r\n  sun_rise: '2020-05-17T05:42:11.782166+08:00',\r\n  sun_set: '2020-05-17T18:57:13.880123+08:00',\r\n  timezone_name: 'LMT',\r\n  parent: {\r\n    title: 'China',\r\n    location_type: 'Country',\r\n    woeid: 23424781,\r\n    latt_long: '36.894451,104.165649'\r\n  },\r\n  sources: [\r\n    {\r\n      title: 'BBC',\r\n      slug: 'bbc',\r\n      url: 'http://www.bbc.co.uk/weather/',\r\n      crawl_rate: 360\r\n    },\r\n    {\r\n      title: 'Forecast.io',\r\n      slug: 'forecast-io',\r\n      url: 'http://forecast.io/',\r\n      crawl_rate: 480\r\n    },\r\n    {\r\n      title: 'HAMweather',\r\n      slug: 'hamweather',\r\n      url: 'http://www.hamweather.com/',\r\n      crawl_rate: 360\r\n    },\r\n    {\r\n      title: 'Met Office',\r\n      slug: 'met-office',\r\n      url: 'http://www.metoffice.gov.uk/',\r\n      crawl_rate: 180\r\n    },\r\n    {\r\n      title: 'OpenWeatherMap',\r\n      slug: 'openweathermap',\r\n      url: 'http://openweathermap.org/',\r\n      crawl_rate: 360\r\n    },\r\n    {\r\n      title: 'Weather Underground',\r\n      slug: 'wunderground',\r\n      url: 'https://www.wunderground.com/?apiref=fc30dc3cd224e19b',\r\n      crawl_rate: 720\r\n    },\r\n    {\r\n      title: 'World Weather Online',\r\n      slug: 'world-weather-online',\r\n      url: 'http://www.worldweatheronline.com/',\r\n      crawl_rate: 360\r\n    }\r\n  ],\r\n  title: 'Hong Kong',\r\n  location_type: 'City',\r\n  woeid: 2165352,\r\n  latt_long: '22.411200,114.153999',\r\n  timezone: 'Asia/Hong_Kong'\r\n}\r\nexport const locations = [\r\n  {\r\n    title: 'Houston',\r\n    location_type: 'City',\r\n    woeid: 2424766,\r\n    latt_long: '29.760450,-95.369781'\r\n  },\r\n  {\r\n    title: 'Hong Kong',\r\n    location_type: 'City',\r\n    woeid: 2165352,\r\n    latt_long: '22.411200,114.153999'\r\n  },\r\n  {\r\n    title: 'Phoenix',\r\n    location_type: 'City',\r\n    woeid: 2471390,\r\n    latt_long: '33.448261,-112.075768'\r\n  },\r\n  {\r\n    title: 'Guangzhou',\r\n    location_type: 'City',\r\n    woeid: 2161838,\r\n    latt_long: '23.107389,113.267616'\r\n  },\r\n  {\r\n    title: 'Oklahoma City',\r\n    location_type: 'City',\r\n    woeid: 2464592,\r\n    latt_long: '35.472000,-97.520348'\r\n  },\r\n  {\r\n    title: 'Honolulu',\r\n    location_type: 'City',\r\n    woeid: 2423945,\r\n    latt_long: '21.304850,-157.857758'\r\n  },\r\n  {\r\n    title: 'Ho Chi Minh City',\r\n    location_type: 'City',\r\n    woeid: 1252431,\r\n    latt_long: '10.759180,106.662498'\r\n  },\r\n  {\r\n    title: 'Anchorage',\r\n    location_type: 'City',\r\n    woeid: 2354490,\r\n    latt_long: '61.217548,-149.858383'\r\n  },\r\n  {\r\n    title: 'Stockholm',\r\n    location_type: 'City',\r\n    woeid: 906057,\r\n    latt_long: '59.332169,18.062429'\r\n  },\r\n  {\r\n    title: 'Lahore',\r\n    location_type: 'City',\r\n    woeid: 2211177,\r\n    latt_long: '31.549910,74.327301'\r\n  },\r\n  {\r\n    title: 'Lake Tahoe',\r\n    location_type: 'City',\r\n    woeid: 23511744,\r\n    latt_long: '39.021400,-120.044823'\r\n  },\r\n  {\r\n    title: 'Hangzhou',\r\n    location_type: 'City',\r\n    woeid: 2132574,\r\n    latt_long: '30.252501,120.165024'\r\n  },\r\n  {\r\n    title: 'Windhoek',\r\n    location_type: 'City',\r\n    woeid: 1466719,\r\n    latt_long: '-22.559561,17.08445'\r\n  }\r\n]\r\n\r\nexport const defaultLocation = {\r\n  title: 'Ho Chi Minh City',\r\n  location_type: 'City',\r\n  woeid: 1252431,\r\n  latt_long: '10.759180,106.662498',\r\n  weather_state_name: 'assasa',\r\n  min_temp: 11,\r\n  humidity: 3\r\n}\r\n","const API_URL = `https://cors-anywhere.herokuapp.com`\r\nconst baseUrl = `https://www.metaweather.com/api/location`\r\n\r\nexport const locationUrl = `${API_URL}/${baseUrl}` \r\n","import React, { useState } from 'react'\r\nimport { FormControl } from 'react-bootstrap'\r\nimport { locationUrl } from '../../src/commons/utils'\r\nimport PropTypes from 'prop-types'\r\nimport Autocomplete from 'react-autocomplete'\r\nimport { WindMillLoading } from 'react-loadingg'\r\nimport axios from 'axios'\r\n\r\nconst LocationSearchBar = ({ onSearch }) => {\r\n    const [selectedLocationName, setSelectedLocationName] = useState('')\r\n    const [state, setState] = useState({\r\n        loading: false,\r\n        error: null,\r\n        foundLocations: []\r\n    })\r\n\r\n    async function onChange(e) {\r\n        const locationString = e.target.value\r\n        setSelectedLocationName(locationString)\r\n        if (locationString !== '') {\r\n            try {\r\n                const response = await axios.get(`${locationUrl}/search/?query=${locationString}`)\r\n                setState({\r\n                    loading: true,\r\n                    error: null,\r\n                    foundLocations: response.data\r\n                })\r\n            } catch (err) {\r\n                setState({\r\n                    loading: false,\r\n                    error: null,\r\n                    foundLocations: []\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    const onSelect = (title) => {\r\n        setSelectedLocationName(title)\r\n        const selectedLocationName = state.foundLocations.find((location) => {\r\n            return location.title === title\r\n        })\r\n        setState({\r\n            loading: false,\r\n            error: false,\r\n            foundLocations: []\r\n        })\r\n        console.log(selectedLocationName.woeid)\r\n        onSearch(selectedLocationName.woeid)\r\n    }\r\n    return (\r\n        <React.Fragment>\r\n            <Autocomplete\r\n                items={state.foundLocations}\r\n                getItemValue={(item) => item.title}\r\n                renderInput={(props) => {\r\n                    return <FormControl name='search' type='text' placeholder='Type location...' className='mr-sm-2' {...props} />\r\n                }}\r\n                renderItem={(item, highlighted) => (\r\n                    <div key={item.woeid} style={{ backgroundColor: highlighted ? '#eee' : 'transparent' }}>{item.title}</div>\r\n                )}\r\n                value={selectedLocationName}\r\n                onChange={onChange}\r\n                onSelect={onSelect}\r\n            />\r\n            {state.error && <span className='text-danger'>{state.error}</span>}\r\n            {state.loading && <span className='text-info'><WindMillLoading /></span>}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nLocationSearchBar.propTypes = {\r\n    onSearch: PropTypes.string\r\n}\r\n\r\nexport default LocationSearchBar\r\n","import React from 'react'\r\nimport './params.scss'\r\n\r\nexport const Params = (props) => {\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                <div className=\"weatherParams-wrapper\">\r\n                    <div className=\"weatherParams-wrapper-item\">\r\n                            <div className=\"title\">VISIBILITY</div>\r\n                            <div className=\"content bg-number\">{Math.round(props.dataFromStatus.visibility)}</div>\r\n                            <div className=\"extra\">Good</div>\r\n                        </div>\r\n                        <div className=\"weatherParams-wrapper-item\">\r\n                            <div className=\"title\">WIND SPEED</div>\r\n                            <div className=\"content normal-number\">{Math.round(props.dataFromStatus.wind_speed)}</div>\r\n                            <div className=\"extra\">km/h</div>\r\n                        </div>\r\n                    <div className=\"weatherParams-wrapper-item\">\r\n                        <div className=\"title\">DENGUE</div>\r\n                        <div className=\"content circle-shape\"></div>\r\n                        <div className=\"extra\"></div>\r\n                    </div>\r\n                    <div className=\"weatherParams-wrapper-item\">\r\n                        <div className=\"add-icon\"></div>\r\n                        <div className=\"add-text\">Add</div>\r\n                    </div>\r\n                </div>\r\n            }\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nexport default Params\r\n","import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport PropTypes from 'prop-types'\r\nimport { locationUrl } from '../../../../commons/utils'\r\nimport './status.scss'\r\nimport { DiamonLoading } from 'react-loadingg'\r\nimport Params from '../Status/components/Params/Params'\r\nconst Status = ({ locationId }) => {\r\n    const [consolidatedWeatherFirst, setConsolidatedWeatherFirst] = useState(null)\r\n    const [weather, setWeather] = useState([])\r\n    const [loading, setLoading] = useState(true)\r\n    const [error, setError] = useState(false)\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            setLoading(true)\r\n            setError(false)\r\n            try {\r\n                const response = await axios.get(`${locationUrl}/${locationId}`)\r\n                setWeather(response.data)\r\n                setConsolidatedWeatherFirst(response.data.consolidated_weather[0])\r\n                setLoading(true)\r\n                setError(false)\r\n            } catch (err) {\r\n                setError(true)\r\n            }\r\n            setLoading(false)\r\n        }\r\n        fetchData()\r\n    },[locationId])\r\n    console.log(weather)\r\n    console.log(consolidatedWeatherFirst);\r\n    return (\r\n        <React.Fragment>\r\n            {\r\n                consolidatedWeatherFirst === null ? \"\" : <>\r\n                    {loading && <div className='location'>loading...</div>}\r\n                    <div className='location'>Location: {weather.title}</div>\r\n                    <div className=\"weatherStatus-wrapper\">\r\n                        <div className=\"weatherStatus-wrapper__icon\">\r\n                        </div>\r\n                        <div className=\"weatherStatus-wrapper__info\">\r\n                            <div className=\"status-text\">{consolidatedWeatherFirst.weather_state_name}</div>\r\n                            <div className=\"status-info\">\r\n                                <span className=\"status-temperature\">{Math.round(consolidatedWeatherFirst.the_temp)} C</span>\r\n                                <span className=\"status-humidity\">{Math.round(consolidatedWeatherFirst.humidity)}%</span>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <Params dataFromStatus={consolidatedWeatherFirst} />\r\n                </>\r\n            }\r\n            {error && <div className='text-danger'> {error} </div>}\r\n            {loading && <div className='location'><DiamonLoading /></div>}\r\n        </React.Fragment>\r\n    )\r\n}\r\n\r\nStatus.propTypes = {\r\n    locationId: PropTypes.string\r\n}\r\n\r\nexport default Status\r\n","import React, { useState } from 'react'\r\nimport { defaultLocation } from '../../../../__mock__/mockData'\r\nimport LocationSearchBar from '../../../../components/LocationSearchBar'\r\nimport './header.scss'\r\nimport Status from '../Status/Status'\r\n\r\nexport const Header = () => {\r\n    const [locationId, setLocationId] = useState(defaultLocation.woeid)\r\n    const onSearch = (foundLocationId) => {\r\n        if (foundLocationId !== '') {\r\n            setLocationId(foundLocationId)\r\n        }\r\n    }\r\n    console.log(locationId);\r\n    return (\r\n        <div>\r\n            <div className=\"nav-container\">\r\n                <div className=\"nav-burger\">\r\n                    <span></span>\r\n                    <span></span>\r\n                    <span></span>\r\n                </div>\r\n                <div className=\"nav-location\">\r\n                    <div className=\"nav-location-name\">myENV</div>\r\n                    <div className=\"nav-location-dropdown\">\r\n                        <section>\r\n                            <LocationSearchBar onSearch={onSearch} />\r\n                        </section>\r\n                    </div>\r\n                </div>\r\n                <div className=\"nav-notification\"></div>\r\n            </div>\r\n            <Status locationId={locationId} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport Header from './components/Header/Header'\r\n\r\nconst Upper = () => {\r\n    return (\r\n        <div className=\"layout__container-upper\">\r\n            <Header />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Upper\r\n","import React from '@babel/template'\r\nimport Chart from './scenes/Chart/Chart'\r\nimport Upper from './scenes/_Upper/Upper'\r\nimport './styles/App.scss'\r\n\r\nconst App = () => {\r\n  return (\r\n    <div className=\"layout__container\">\r\n      <Upper />\r\n      <div className=\"layout__container-chart\">\r\n        <div className=\"layout__container-chart--title\">\r\n          <span className=\"blue-title\">Tide</span>\r\n          <span className=\"orange-title\">Sunrise & Sunset</span>\r\n        </div>\r\n        <Chart />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}