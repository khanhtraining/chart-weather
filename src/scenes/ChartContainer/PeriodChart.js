import React, { useLayoutEffect, useRef } from 'react'
import { select } from 'd3'
import * as d3 from 'd3'

const PeriodChart = (props) => {
    const ref = useRef()
    const { width, height, data } = props
    const x = d3.scalePoint()
        .domain(((data).map(function (d) { return d.hour })))
    const y = d3.scaleLinear()
        .domain([0, 3])
    x.range([0, width])
    y.range([height, 0])

    useLayoutEffect(() => {
        const g = select(ref.current)
        const drawRectInformationChart = () => {
            g.append('rect')
                .data(([data]))
                .attr("class", 'rect-infor')
                .attr('x', function (d) { return x(d[0]?.hour) })
                .attr("y", function (d) { return y(d[0]?.tide) })

            g.append('rect')
                .data(([data]))
                .attr("class", 'rect-infor')
                .attr('x', function (d) { return x(d[1]?.hour) })
                .attr("y", function (d) { return y(d[1]?.tide) })

            g.append('rect')
                .data(([data]))
                .attr("class", 'rect-infor')
                .attr('x', function (d) { return x(d[2]?.hour) })
                .attr("y", function (d) { return y(d[2]?.tide) })

            g.append('rect')
                .data(([data]))
                .attr("class", 'rect-infor')
                .attr('x', function (d) { return x(d[3]?.hour) })
                .attr("y", function (d) { return y(d[3]?.tide) })

            g.append('rect')
                .data(([data]))
                .attr("class", 'rect-infor')
                .attr('x', function (d) { return x(d[4]?.hour) })
                .attr("y", function (d) { return y(d[4]?.tide) })

            g.append('rect')
                .data(([data]))
                .attr("class", 'rect-infor')
                .attr('x', function (d) { return x(d[5]?.hour) })
                .attr("y", function (d) { return y(d[5]?.tide) })

            g.append('rect')
                .data(([data]))
                .attr("class", 'rect-infor')
                .attr('x', function (d) { return x(d[6]?.hour) })
                .attr("y", function (d) { return y(d[6]?.tide) })

            g.append('rect')
                .data(([data]))
                .attr("class", 'rect-infor')
                .attr('x', function (d) { return x(d[7]?.hour) })
                .attr("y", function (d) { return y(d[7]?.tide) })

            g.append('rect')
                .data(([data]))
                .attr("class", 'rect-infor')
                .attr('x', function (d) { return x(d[8]?.hour) })
                .attr("y", function (d) { return y(d[8]?.tide) })

            g.append('rect')
                .data(([data]))
                .attr("class", 'rect-infor')
                .attr('x', function (d) { return x(d[9]?.hour) })
                .attr("y", function (d) { return y(d[9]?.tide) })

            g.append('rect')
                .data(([data]))
                .attr("class", 'rect-infor')
                .attr('x', function (d) { return x(d[10]?.hour) })
                .attr("y", function (d) { return y(d[10]?.tide) })

            g.append('rect')
                .data(([data]))
                .attr("class", 'rect-infor')
                .attr('x', function (d) { return x(d[11]?.hour) })
                .attr("y", function (d) { return y(d[11]?.tide) })

            g.append('rect')
                .data(([data]))
                .attr("class", 'rect-infor')
                .attr('x', function (d) { return x(d[12]?.hour) })
                .attr("y", function (d) { return y(d[12]?.tide) })

            g.append('text')
                .data(([data]))
                .attr("class", 'text-infor_hour')
                .attr('x', function (d) { return x(d[0]?.hour) })
                .attr("y", function (d) { return y(d[0]?.tide) })
                .text(function (d) { return d[0].hour })
            g.append('text')
                .data(([data]))
                .attr("class", 'text-infor_tide')
                .attr('x', function (d) { return x(d[0]?.hour) })
                .attr("y", function (d) { return y(d[0]?.tide) })
                .text(function (d) { return d[0].tide })
            g.append('text')
                .data(([data]))
                .attr("class", 'text-infor_tide--m')
                .attr('x', function (d) { return x(d[0]?.hour) })
                .attr("y", function (d) { return y(d[0]?.tide) })
                .text(`m`)

            g.append('text')
                .data(([data]))
                .attr("class", 'text-infor_hour')
                .attr('x', function (d) { return x(d[1]?.hour) })
                .attr("y", function (d) { return y(d[1]?.tide) })
                .text(function (d) { return d[1].hour })
            g.append('text')
                .data(([data]))
                .attr("class", 'text-infor_tide')
                .attr('x', function (d) { return x(d[1]?.hour) })
                .attr("y", function (d) { return y(d[1]?.tide) })
                .text(function (d) { return d[1].tide })
            g.append('text')
                .data(([data]))
                .attr("class", 'text-infor_tide--m')
                .attr('x', function (d) { return x(d[1]?.hour) })
                .attr("y", function (d) { return y(d[1]?.tide) })
                .text(`m`)

            g.append('text')
                .data(([data]))
                .attr("class", 'text-infor_hour')
                .attr('x', function (d) { return x(d[2]?.hour) })
                .attr("y", function (d) { return y(d[2]?.tide) })
                .text(function (d) { return d[2].hour })
            g.append('text')
                .data(([data]))
                .attr("class", 'text-infor_tide')
                .attr('x', function (d) { return x(d[2]?.hour) })
                .attr("y", function (d) { return y(d[2]?.tide) })
                .text(function (d) { return d[2].tide })
            g.append('text')
                .data(([data]))
                .attr("class", 'text-infor_tide--m')
                .attr('x', function (d) { return x(d[2]?.hour) })
                .attr("y", function (d) { return y(d[2]?.tide) })
                .text(`m`)

            g.append('text')
                .data(([data]))
                .attr("class", 'text-infor_hour')
                .attr('x', function (d) { return x(d[3]?.hour) })
                .attr("y", function (d) { return y(d[3]?.tide) })
                .text(function (d) { return d[3].hour })
            g.append('text')
                .data(([data]))
                .attr("class", 'text-infor_tide')
                .attr('x', function (d) { return x(d[3]?.hour) })
                .attr("y", function (d) { return y(d[3]?.tide) })
                .text(function (d) { return d[3].tide })
            g.append('text')
                .data(([data]))
                .attr("class", 'text-infor_tide--m')
                .attr('x', function (d) { return x(d[3]?.hour) })
                .attr("y", function (d) { return y(d[3]?.tide) })
                .text(`m`)

            g.append('text')
                .data(([data]))
                .attr("class", 'text-infor_hour')
                .attr('x', function (d) { return x(d[4]?.hour) })
                .attr("y", function (d) { return y(d[4]?.tide) })
                .text(function (d) { return d[4].hour })
            g.append('text')
                .data(([data]))
                .attr("class", 'text-infor_tide')
                .attr('x', function (d) { return x(d[4]?.hour) })
                .attr("y", function (d) { return y(d[4]?.tide) })
                .text(function (d) { return d[4].tide })
            g.append('text')
                .data(([data]))
                .attr("class", 'text-infor_tide--m')
                .attr('x', function (d) { return x(d[4]?.hour) })
                .attr("y", function (d) { return y(d[4]?.tide) })
                .text(`m`)

            g.append('text')
                .data(([data]))
                .attr("class", 'text-infor_hour')
                .attr('x', function (d) { return x(d[5]?.hour) })
                .attr("y", function (d) { return y(d[5]?.tide) })
                .text(function (d) { return d[5].hour })
            g.append('text')
                .data(([data]))
                .attr("class", 'text-infor_tide')
                .attr('x', function (d) { return x(d[5]?.hour) })
                .attr("y", function (d) { return y(d[5]?.tide) })
                .text(function (d) { return d[5].tide })
            g.append('text')
                .data(([data]))
                .attr("class", 'text-infor_tide--m')
                .attr('x', function (d) { return x(d[5]?.hour) })
                .attr("y", function (d) { return y(d[5]?.tide) })
                .text(`m`)

            g.append('text')
                .data(([data]))
                .attr("class", 'text-infor_hour')
                .attr('x', function (d) { return x(d[6]?.hour) })
                .attr("y", function (d) { return y(d[6]?.tide) })
                .text(function (d) { return d[6].hour })
            g.append('text')
                .data(([data]))
                .attr("class", 'text-infor_tide')
                .attr('x', function (d) { return x(d[6]?.hour) })
                .attr("y", function (d) { return y(d[6]?.tide) })
                .text(function (d) { return d[6].tide })
            g.append('text')
                .data(([data]))
                .attr("class", 'text-infor_tide--m')
                .attr('x', function (d) { return x(d[6]?.hour) })
                .attr("y", function (d) { return y(d[6]?.tide) })
                .text(`m`)

            g.append('text')
                .data(([data]))
                .attr("class", 'text-infor_hour')
                .attr('x', function (d) { return x(d[7]?.hour) })
                .attr("y", function (d) { return y(d[7]?.tide) })
                .text(function (d) { return d[7].hour })
            g.append('text')
                .data(([data]))
                .attr("class", 'text-infor_tide')
                .attr('x', function (d) { return x(d[7]?.hour) })
                .attr("y", function (d) { return y(d[7]?.tide) })
                .text(function (d) { return d[7].tide })
            g.append('text')
                .data(([data]))
                .attr("class", 'text-infor_tide--m')
                .attr('x', function (d) { return x(d[7]?.hour) })
                .attr("y", function (d) { return y(d[7]?.tide) })
                .text(`m`)

            g.append('text')
                .data(([data]))
                .attr("class", 'text-infor_hour')
                .attr('x', function (d) { return x(d[8]?.hour) })
                .attr("y", function (d) { return y(d[8]?.tide) })
                .text(function (d) { return d[8].hour })
            g.append('text')
                .data(([data]))
                .attr("class", 'text-infor_tide')
                .attr('x', function (d) { return x(d[8]?.hour) })
                .attr("y", function (d) { return y(d[8]?.tide) })
                .text(function (d) { return d[8].tide })
            g.append('text')
                .data(([data]))
                .attr("class", 'text-infor_tide--m')
                .attr('x', function (d) { return x(d[8]?.hour) })
                .attr("y", function (d) { return y(d[8]?.tide) })
                .text(`m`)

            g.append('text')
                .data(([data]))
                .attr("class", 'text-infor_hour')
                .attr('x', function (d) { return x(d[9]?.hour) })
                .attr("y", function (d) { return y(d[9]?.tide) })
                .text(function (d) { return d[9].hour })
            g.append('text')
                .data(([data]))
                .attr("class", 'text-infor_tide')
                .attr('x', function (d) { return x(d[9]?.hour) })
                .attr("y", function (d) { return y(d[9]?.tide) })
                .text(function (d) { return d[9].tide })
            g.append('text')
                .data(([data]))
                .attr("class", 'text-infor_tide--m')
                .attr('x', function (d) { return x(d[9]?.hour) })
                .attr("y", function (d) { return y(d[9]?.tide) })
                .text(`m`)

            g.append('text')
                .data(([data]))
                .attr("class", 'text-infor_hour')
                .attr('x', function (d) { return x(d[10]?.hour) })
                .attr("y", function (d) { return y(d[10]?.tide) })
                .text(function (d) { return d[10].hour })
            g.append('text')
                .data(([data]))
                .attr("class", 'text-infor_tide')
                .attr('x', function (d) { return x(d[10]?.hour) })
                .attr("y", function (d) { return y(d[10]?.tide) })
                .text(function (d) { return d[10].tide })
            g.append('text')
                .data(([data]))
                .attr("class", 'text-infor_tide--m')
                .attr('x', function (d) { return x(d[10]?.hour) })
                .attr("y", function (d) { return y(d[10]?.tide) })
                .text(`m`)

            g.append('text')
                .data(([data]))
                .attr("class", 'text-infor_hour')
                .attr('x', function (d) { return x(d[11]?.hour) })
                .attr("y", function (d) { return y(d[11]?.tide) })
                .text(function (d) { return d[11].hour })
            g.append('text')
                .data(([data]))
                .attr("class", 'text-infor_tide')
                .attr('x', function (d) { return x(d[11]?.hour) })
                .attr("y", function (d) { return y(d[11]?.tide) })
                .text(function (d) { return d[11].tide })
            g.append('text')
                .data(([data]))
                .attr("class", 'text-infor_tide--m')
                .attr('x', function (d) { return x(d[11]?.hour) })
                .attr("y", function (d) { return y(d[11]?.tide) })
                .text(`m`)

            g.append('text')
                .data(([data]))
                .attr("class", 'text-infor_hour')
                .attr('x', function (d) { return x(d[12]?.hour) })
                .attr("y", function (d) { return y(d[12]?.tide) })
                .text(function (d) { return d[12].hour })
            g.append('text')
                .data(([data]))
                .attr("class", 'text-infor_tide')
                .attr('x', function (d) { return x(d[12]?.hour) })
                .attr("y", function (d) { return y(d[12]?.tide) })
                .text(function (d) { return d[12].tide })
            g.append('text')
                .data(([data]))
                .attr("class", 'text-infor_tide--m')
                .attr('x', function (d) { return x(d[12]?.hour) })
                .attr("y", function (d) { return y(d[12]?.tide) })
                .text(`m`)
        }
        const rectRemove = () => {
            g.selectAll('rect')
                .data([(data)])
                .exit()
                .remove('rect')
        }
        const textRemove = () => {
            g.selectAll('text')
                .data([(data)])
                .exit()
                .remove('text')
        }
        const remove = () => {
            rectRemove()
            textRemove()
        }
        drawRectInformationChart()

        window.addEventListener('resize', remove)
        window.addEventListener('resize', drawRectInformationChart)
        drawRectInformationChart()
    }, [width, height, data])

    return (
        <g className='weather-container' ref={ref}></g>
    )
}

export default PeriodChart
